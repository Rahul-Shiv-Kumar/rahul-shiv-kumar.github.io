/* Custom properties/variables  */
:root {
  --main-white:rgb(202, 202, 202);
  --main-red: rgba(190, 49, 68, 0.623);
  --main-blue: #45567d;
  --main-gray: #000000;
}

/* Base reset */
* {
  margin: 0;
  padding: 0;
}

/* box-sizing and font sizing */
*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;

  /* Set font size for easy rem calculations
   * default document font size = 16px, 1rem = 16px, 100% = 16px
   * (100% / 16px) * 10 = 62.5%, 1rem = 10px, 62.5% = 10px
  */
  font-size: 62.5%;
  scroll-behavior: smooth;
}

/* A few media query to set some font sizes at different screen sizes.
 * This helps automate a bit of responsiveness.
 * The trick is to use the rem unit for size values, margin and padding.
 * Because rem is relative to the document font size
 * when we scale up or down the font size on the document
 * it will affect all properties using rem units for the values.
*/

/* I am using the em unit for breakpoints
 * The calculation is the following
 * screen size divided by browser base font size
 * As an example: a breakpoint at 980px
 * 980px / 16px = 61.25em
*/

/* 1200px / 16px = 75em */
@media (max-width: 75em) {
  html {
    font-size: 60%;
  }
}

/* 980px / 16px = 61.25em */
@media (max-width: 61.25em) {
  html {
    font-size: 58%;
  }
}

/* 460px / 16px = 28.75em */
@media (max-width: 28.75em) {
  html {
    font-size: 55%;
  }
}

/* Base styles */

body {
  font-family: 'Poppins', sans-serif;
  font-size: 1.8rem; /* 18px */
  font-weight: 400;
  line-height: 1.4;
  color: var(--main-white);
}

h1,
h2 {
  font-family: 'Raleway', sans-serif;
  font-weight: 700;
  text-align: center;
}

h1 {
  font-size: 6rem;
}

h2 {
  font-size: 4.2rem;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
  color: var(--main-white);
}

img {
  display: block;
  width: 100%;
}

/* nav */

.nav {
  display: flex;
  justify-content: flex-end;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background: var(--main-red);
  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.3);
  z-index: 10;
}

#logo{
  flex: 1;
  justify-content: flex-end;
  margin-left: 10px;
  margin-top: 5px;
 }

#logo-img{
  width: 82px;
  height: 72px;
}

.nav-list {
  display: flex;
  margin-right: 2rem;
  margin-top: auto;
}

@media (max-width: 28.75em) {
  .nav {
    justify-content: center;
  }

  .nav-list {
    margin: 0 1rem;
  }
}

.nav-list a {
  display: block;
  font-size: 2rem;
  padding: 1rem;
  transition: background 0.3s linear;
}

.nav-list a:hover {
  background: var(--main-blue);
}

/* Welcome section */

.welcome-section {
  font-family:Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100vh;
  background-color: #000;
  background-image: linear-gradient(62deg, #000000 0%, #4f4d53 100%);
}

.welcome-section > p {
  font-size: 3rem;
  font-weight: 200;
  font-style: italic;
  font-family: monospace;
  color: rgb(255, 255, 212);
}

/* Projects section */

.projects-section {
  text-align: center;
  padding: 10rem 2rem;
  background: var(--main-blue);
}

.projects-section-header {
  max-width: 640px;
  margin: 0 auto 6rem auto;
  border-bottom: 0.2rem solid var(--main-white);
}

@media (max-width: 28.75em) {
  .projects-section-header {
    font-size: 4rem;
  }
}

/* "Automagic" image grid using no media queries */
.projects-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  grid-gap: 4rem;
  width: 100%;
  max-width: 1280px;
  margin: 0 auto;
  margin-bottom: 6rem;
}

@media (max-width: 30.625em) {
  .projects-section {
    padding: 6rem 1rem;
  }

  .projects-grid {
    grid-template-columns: 1fr;
  }
}

.project {
  background: var(--main-gray);
  box-shadow: 8px 8px 8px rgba(0, 0, 0, 0.5);
  border-radius: 10px;
  transform: translateX(0);
  transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;

}

.project:hover{
  transform: translateY(2px);
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);
  transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
}
.code {
  color: var(--main-gray);
  transition: color 0.3s ease-out;
}

.project:hover .code {
  color: #ff7f50;
}

.project-image {
  height: calc(100% - 6.8rem);
  width: 100%;
  object-fit: cover;
}

.project-image:hover{
  filter: blur(0.5px);
}

.project-title {
  font-size: 2rem;
  padding: 2rem 0.5rem;
}

.btn {
  display: inline-block;
  padding: 1rem 2rem;
  border-radius: 2px;
  color: yellowgreen;
}

.btn-show-all {
  font-size: 2rem;
  background: var(--main-gray);
  transition: background 0.3s ease-out;
}

.btn-show-all:hover {
  background: var(--main-red);
}

.btn-show-all:hover > i {
  transform: translateX(2px);
}

.btn-show-all > i {
  margin-left: 10px;
  transform: translateX(0);
  transition: transform 0.3s ease-out;
}

/* Contact section */

.contact-section {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 100%;
  height: 80vh;
  padding: 0 2rem;
  background: var(--main-gray);
}

.contact-section-header > h2 {
  font-size: 6rem;
}

@media (max-width: 28.75em) {
  .contact-section-header > h2 {
    font-size: 4rem;
  }
}

.contact-section-header > p {
  font-style: italic;
}

.contact-links {
  display: flex;
  justify-content: center;
  width: 100%;
  max-width: 980px;
  margin-top: 4rem;
  flex-wrap: wrap;
}

.contact-details {
  font-size: 2.4rem;
  text-shadow: 1px 2px 1px #757575;
  transition: transform 0.3s ease-out;
}

.contact-details:hover {
  transform: translateY(4px);
}

/* Footer */

footer {
  font-weight: 300;
  display: flex;
  justify-content: space-evenly;
  padding: 2rem;
  background: var(--main-gray);
  border-top: 4px solid var(--main-red);
}

footer > p {
  margin: 2rem;
}

footer i {
  vertical-align: middle;
}

@media (max-width: 28.75em) {
  footer {
    flex-direction: column;
    text-align: center;
  }
}

.heart{
  color: rgb(255, 6, 6);
}

/* Back to Top btn */
#topUp {
  width:60px;
  display: none; /* Hidden by default */
  position: fixed; /* Fixed/sticky position */
  bottom: 115px; /* Place the button at the bottom of the page */
  right: 25px; /* Place the button 30px from the right */
  z-index: 99; /* Make sure it does not overlap */
  border: none; /* Remove borders */
  outline: none; /* Remove outline */
  background-color: rgba(255, 255, 255, 0.295); /* Set a background color */
  color: white; /* Text color */
  cursor: pointer; /* Add a mouse pointer on hover */
  padding: 15px; /* Some padding */
  border-radius: 10px; /* Rounded corners */
  font-size: 18px; /* Increase font size */
  transition: width 0.5s ease-out;
}

#topUp:hover {
  background-color: rgba(255, 250, 250, 0.61); /* Add a dark-grey background on hover */
  width:80px;
  transition: width 0.5s ease-in;
}

#github{
  border: none; /* Remove borders */
  outline: none;
  background-color: rgba(255, 255, 255, 0.295);
  color: white; /* Text color */
  cursor: pointer; /* Add a mouse pointer on hover */
  padding: 15px; /* Some padding */
  border-radius: 10px; /* Rounded corners */
  font-size: 16px; /* Increase font size */
  transition: background 0.5s ease-out;

}

#github:hover {
  background-color: rgba(255, 250, 250, 0.61); /* Add a dark-grey background on hover */
  transition: background 0.5s ease-in;
  font-weight:400;
}

.copy{
  flex: 2;
  justify-content: center;
  text-align: center;
}

.btn-git{
  flex: 1;
  justify-content: flex-end;
  text-align: right;
  margin-right: 10px;
}


.bio{
  width: 100%;
  text-align:center;
}


  :root {
    --delay: 0;
    --duration: 2s;
    --iterations: 1;
  }
  /* •·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•· */


  .intro,
  .intro::after {
    animation-delay: var(--animation-delay, 2s);
    animation-iteration-count: var(--iterations, 1);
    animation-duration: var(--duration, 2s);
    animation-fill-mode: both;
    animation-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);
  }

  .intro {
    --animation-delay: var(--delay, 0);
    --animation-duration: var(--duration, 7s);
    --animation-iterations: var(--iterations, 1);
    position: relative;
    font-size: 8vw;
    animation-name: clip-text;
    color: var(--main-white);
    white-space: nowrap;
    cursor: default;

  }




  @keyframes clip-text {
    from {
      clip-path: inset(0 100% 0 0);
    }
    to {
      clip-path: inset(0 0 0 0);
    }
  }


  @keyframes text-revealer {

    0%, 50% {
      transform-origin: 0 50%;
    }

    60%, 100% {
      transform-origin: 100% 50%;
    }


    60% {
      transform: scaleX(1);
    }

    100% {
      transform: scaleX(0);
    }
  }
